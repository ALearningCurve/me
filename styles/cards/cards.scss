@import '../conf/all';
$card-max-width: calc(min(100%, 450px));
$min-card-hieght: 400px;
.card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(#{$card-max-width}, auto));
    grid-auto-rows: auto;
    grid-gap: 1rem;
}

.card {
    color: $color-accent-100;
    background-size: cover;
    background-position: center;
    padding: 3rem 0 0;
    width: 100%;
    // height: calc(max(#{$min-card-hieght}, 100%));
    height: 400px;
    border-radius: 1em;
    overflow: hidden;
    .card-content {
        padding: 1rem;
        background: linear-gradient( 180deg, rgba(4, 70, 27, 0) 0%, $color-nuetral-700 25%);
        height: 100%;
        overflow: hidden;
        border-radius: 1em;
        .card-title {
            position: relative;
            width: fit-content;
            &::before {
                content: "";
                position: absolute;
                left: -1rem;
                bottom: 0;
                height: 100%;
                width: calc(100% + 1.5rem);
                background: $color-accent-500;
                z-index: -1;
                transform-origin: left;
                transition: transform 750ms cubic-bezier(0.210, 1.650, 0.665, -0.600);
            }
            &::after {
                content: "";
                position: absolute;
                left: -1rem;
                bottom: 0;
                height: 100%;
                width: calc(100% + 1.5rem);
                background: $color-nuetral-500;
                z-index: -1;
                visibility: hidden;
                transform-origin: left;
                transition: transform 750ms cubic-bezier(0.210, 1.650, 0.665, -0.600);
            }
        }
        .card-body {
            overflow-y: scroll;
            overflow-x: hidden;
            height: 245px;
            color: $color-accent-100;
        }
        .button {
            cursor: pointer;
            display: inline;
            text-decoration: none;
            color: $color-accent-800;
            background-color: $color-accent-200;
            padding: .5em;
            border-radius: .25em;
            &:hover,
            &:focus {
                background-color: $color-accent-300;
            }
        }
    }
}

// Run animations only if hover is supported
@media (hover) {
    .card-content {
        transform: translateY(250px);
        transition: transform 750ms;
    }
    .card-content>*:not(.card-title) {
        opacity: 0;
        transition: opacity 500ms;
    }
    .card:hover,
    .card:focus,
    .card:focus-within {
        transform: scale(1.01);
        transition: transform 750ms;
    }
    .card:hover .card-title::before,
    .card:focus-within .card-title::before {
        transform: scaleX(100%);
    }
    .card:hover .card-title::after,
    .card:focus-within .card-title::after {
        transform: scaleX(0%);
    }
    .card:hover .card-content,
    .card:focus-within .card-content {
        transform: translateY(0%);
        transition-delay: 200ms;
    }
    .card:focus-within .card-content {
        transition-duration: 0ms;
    }
    .card:hover .card-content>*,
    .card:focus-within .card-content>* {
        opacity: 1;
        transition-delay: 750ms;
    }
    .card-title::before {
        transform: scaleX(0%);
    }
    .card-title::after {
        transform: scaleX(100%);
        visibility: visible !important;
    }
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: .01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: .01ms !important;
        scroll-behavior: auto !important;
        transition-delay: 0ms !important;
    }
}